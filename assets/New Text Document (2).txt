import React from "react";
import { useRef, useState } from "react";
import { StatusBar } from "expo-status-bar";
import {
  StyleSheet,
  Text,
  View,
  Button,
  Image,
  Dimensions,
  Settings,
  ImageBackground,
} from "react-native";
import { Animated, SafeAreaView } from "react-native";
import { TouchableOpacity } from "react-native";
import {
  backgroundColor,
  borderColor,
  color,
} from "react-native/Libraries/Components/View/ReactNativeStyleAttributes";
import { TextInput } from "react-native";
import FontAwesome from "react-native-vector-icons/FontAwesome";
import Feather from "react-native-vector-icons/Feather";
import { Bold, Home } from "react-feather";

import profile from "./assets/profile.png";

import home from "./assets/home.png";
import search from "./assets/envelope.png";
import notifications from "./assets/alarm.png";
// Menu
import menu from "./assets/menu.png";
import close from "./assets/menu.png";

export default function MainMenu() {
  const [currentTab, setCurrentTab] = useState("Home");
  // To get the curretn Status of menu ...
  const [showMenu, setShowMenu] = useState(false);

  // Animated Properties...

  const offsetValue = useRef(new Animated.Value(0)).current;
  // Scale Intially must be One...
  const scaleValue = useRef(new Animated.Value(1)).current;
  const closeButtonOffset = useRef(new Animated.Value(0)).current;

  return (
    <SafeAreaView style={styles.container}>
      <View style={{ justifyContent: "flex-start", right: -20 }}>
        <Image
          source={profile}
          style={{
            width: 150,
            height: 150,
            borderRadius: 0,
            marginTop: 50,
          }}
        ></Image>

        <Text
          style={{
            fontSize: 20,
            fontWeight: "bold",
            color: "white",
            marginTop: 20,
          }}
        >
          Hotel Booker
        </Text>

        <View style={{ flexGrow: 1, marginTop: 50 }}>
          {
            // Tab Bar Buttons....
          }

          {TabButton(currentTab, setCurrentTab, "Home", home)}
          {TabButton(currentTab, setCurrentTab, "Search", search)}
          {TabButton(currentTab, setCurrentTab, "Notifications", notifications)}
        </View>
      </View>

      {
        // Over lay View...
      }

      <Animated.View
        style={{
          flexGrow: 1,
          backgroundColor: "#ffa500",
          position: "absolute",
          top: 0,
          bottom: 0,
          left: 0,
          right: 0,
          paddingHorizontal: 15,
          paddingVertical: 20,
          borderRadius: showMenu ? 15 : 0,
          // Transforming View...
          transform: [{ scale: scaleValue }, { translateX: offsetValue }],
        }}
      >
        {
          // Menu Button...
        }
        <Animated.View
          style={{
            transform: [
              {
                translateY: closeButtonOffset,
              },
            ],
          }}
        >
          <TouchableOpacity
            onPress={() => {
              // Do Actions Here....
              // Scaling the view...
              Animated.timing(scaleValue, {
                toValue: showMenu ? 1 : 0.88,
                duration: 300,
                useNativeDriver: true,
              }).start();

              Animated.timing(offsetValue, {
                // YOur Random Value...
                toValue: showMenu ? 0 : 230,
                duration: 300,
                useNativeDriver: true,
              }).start();

              Animated.timing(closeButtonOffset, {
                // YOur Random Value...
                toValue: !showMenu ? -30 : 0,
                duration: 300,
                useNativeDriver: true,
              }).start();

              setShowMenu(!showMenu);
            }}
          >
            <Image
              source={showMenu ? close : menu}
              style={{
                width: 30,
                height: 30,
                tintColor: "black",
                marginTop: 40,
              }}
            ></Image>
          </TouchableOpacity>

          <Image
            style={styles.logo}
            source={require("./assets/animation_300_kxqdk0d7.gif")}
          />
          <Text style={styles.Main}>Home</Text>

          <View style={styles.getstarted}>
            <View style={styles.look}>
              <TouchableOpacity>
                <Text style={styles.looktxt}>Look for Hotels</Text>
                <Image
                  style={styles.lookpng}
                  source={require("./assets/output-onlinepngtools.png")}
                />
              </TouchableOpacity>
            </View>

            <View style={styles.look1}>
              <TouchableOpacity>
                <Text style={styles.look1txt}>Go for Payment</Text>
                <Image
                  style={styles.look1png}
                  source={require("./assets/animation_200_kxqgkk0l.gif")}
                />
              </TouchableOpacity>
            </View>

            <View style={styles.look2}>
              <TouchableOpacity>
                <Text style={styles.look2txt}>Room Services</Text>
                <Image
                  style={styles.look2png}
                  source={require("./assets/waiter.png")}
                />
              </TouchableOpacity>
            </View>

            <View style={styles.back}>
              <TouchableOpacity>
                <Image
                  source={require("./assets/back-button.png")}
                  style={styles.backpng}
                />
              </TouchableOpacity>
            </View>
          </View>

          <View style={styles.logout}>
            <TouchableOpacity>
              <Image
                source={require("./assets/log-out1.png")}
                style={styles.logoutpng}
              />
            </TouchableOpacity>
          </View>
          <StatusBar style="auto" />
        </Animated.View>
      </Animated.View>
    </SafeAreaView>
  );
}

// For multiple Buttons...
const TabButton = (currentTab, setCurrentTab, title, image) => {
  return (
    <TouchableOpacity
      onPress={() => {
        if (title == "LogOut") {
          // Do your Stuff...
        } else {
          setCurrentTab(title);
        }
      }}
    >
      <View
        style={{
          flexDirection: "row",
          alignItems: "center",
          paddingVertical: 8,
          backgroundColor: currentTab == title ? "white" : "transparent",
          paddingLeft: 13,
          paddingRight: 35,
          borderRadius: 8,
          marginTop: 15,
        }}
      >
        <Image
          source={image}
          style={{
            width: 20,
            height: 20,
            tintColor: currentTab == title ? "#ffa500" : "white",
          }}
        ></Image>

        <Text
          style={{
            fontSize: 15,
            fontWeight: "bold",
            paddingLeft: 15,
            color: currentTab == title ? "#ffa500" : "white",
          }}
        >
          {title}
        </Text>
      </View>
    </TouchableOpacity>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#ffa500",
    alignItems: "flex-start",
    justifyContent: "flex-start",
  },
  cont: {
    flex: 0,
    backgroundColor: "#ffa500",
    width: 450,
    right: 40,
    alignItems: "center",
    justifyContent: "center",
    bottom: 10,
  },
  getstarted: {
    backgroundColor: "#fff",
    borderTopLeftRadius: 60,
    borderTopRightRadius: 50,
    bottom: 80,
    right: 15,
    height: 600,
    width: 414,
  },
  Main: {
    bottom: 235,
    textAlign: "center",
    left: 5,
    color: "black",
    alignContent: "center",
    justifyContent: "center",
    fontSize: 40,
    fontWeight: "bold",
  },
  logo: {
    resizeMode: "center",
    height: 350,
    width: 250,
    bottom: 100,
    alignContent: "center",
    justifyContent: "center",
    left: 70,
  },
  look: {
    backgroundColor: "black",
    width: 320,
    alignItems: "center",
    alignContent: "center",
    justifyContent: "center",
    left: 48,
    top: 20,
    height: 100,
    borderRadius: 30,
  },
  looktxt: {
    color: "white",
    fontWeight: "bold",
    fontSize: 24,
    top: 125,
    left: -18,
  },
  lookpng: {
    resizeMode: "center",
    left: 100,
    top: -18,
  },

  look1: {
    backgroundColor: "black",
    width: 320,
    alignItems: "center",
    alignContent: "center",
    justifyContent: "center",
    left: 48,
    top: 60,
    height: 100,
    borderRadius: 30,
  },
  look1txt: {
    color: "white",
    fontWeight: "bold",
    fontSize: 24,
    top: 100,
    left: -42,
  },
  look1png: {
    resizeMode: "center",
    left: 100,
    top: -18,
  },

  look2: {
    backgroundColor: "black",
    width: 320,
    alignItems: "center",
    alignContent: "center",
    justifyContent: "center",
    left: 48,
    top: 100,
    height: 100,
    borderRadius: 30,
  },
  look2txt: {
    color: "white",
    fontWeight: "bold",
    fontSize: 24,
    top: 50,
    left: -48,
  },
  look2png: {
    resizeMode: "center",
    left: 150,
    top: -18,
    width: 100,
    height: 100,
  },

  logout: {
    flex: 0,
    width: 30,
    height: 30,
    left: 350,
    bottom: 1045,
    borderWidth: 0,
  },
  logoutpng: {
    resizeMode: "center",
    right: 0,
    width: 30,
    height: 30,
    top: 4,
  },

  back: {
    flex: 0,
    width: 50,
    height: 50,
    left: 10,
    bottom: -110,
    borderWidth: 0,
  },
  backpng: {
    resizeMode: "center",
    width: 40,
    height: 40,
  },
  bgimage: {
    top: 50,
    width: 700,
    height: 450,
    resizeMode: "stretch",
    justifyContent: "center",
    opacity: 3,
  },
});
